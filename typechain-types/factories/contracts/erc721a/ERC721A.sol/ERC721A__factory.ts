/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721A,
  ERC721AInterface,
} from "../../../../contracts/erc721a/ERC721A.sol/ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bfc38038062001bfc8339818101604052810190620000379190620002d9565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a906200038d565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b8381111562000255576000848401525b50505050565b6000620002726200026c84620001ef565b620001d0565b90508281526020810184848401111562000291576200029062000155565b5b6200029e84828562000225565b509392505050565b600082601f830112620002be57620002bd62000150565b5b8151620002d08482602086016200025b565b91505092915050565b60008060408385031215620002f357620002f262000146565b5b600083015167ffffffffffffffff8111156200031457620003136200014b565b5b6200032285828601620002a6565b925050602083015167ffffffffffffffff8111156200034657620003456200014b565b5b6200035485828601620002a6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a657607f821691505b60208210811415620003bd57620003bc6200035e565b5b50919050565b61182980620003d36000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906110f8565b61036a565b6040516101169190611140565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b60405161014191906111f4565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061124c565b61048e565b60405161017e91906112ba565b60405180910390f35b6101a1600480360381019061019c9190611301565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c59190611350565b60405180910390f35b6101e860048036038101906101e3919061136b565b610513565b005b61020460048036038101906101ff919061136b565b6107d7565b005b34801561021257600080fd5b5061022d6004803603810190610228919061124c565b6107f7565b60405161023a91906112ba565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906113be565b610809565b6040516102779190611350565b60405180910390f35b34801561028c57600080fd5b506102956108a1565b6040516102a291906111f4565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611417565b610933565b005b6102ee60048036038101906102e9919061158c565b610a3e565b005b3480156102fc57600080fd5b506103176004803603810190610312919061124c565b610a90565b60405161032491906111f4565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061160f565b610b0e565b6040516103619190611140565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b9061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546104379061167e565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610ba2565b6104ae576104ad63cf4700e460e01b610c01565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c0b565b5050565b6000610506610d3a565b6001546000540303905090565b600061051e82610d3f565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c01565b5b60008061059f84610e02565b915091506105b581876105b0610e29565b610e31565b6105e0576105ca866105c5610e29565b610b0e565b6105df576105de6359c896be60e01b610c01565b5b5b6105ed8686866001610e75565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610e7b565b7c020000000000000000000000000000000000000000000000000000000017610ea3565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561074e57600060018501905060006004600083815260200190815260200160002054141561074c57600054811461074b578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156107c1576107c063ea553b3460e01b610c01565b5b6107ce8787876001610ece565b50505050505050565b6107f283838360405180602001604052806000815250610a3e565b505050565b600061080282610d3f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108505761084f638f4eb60460e01b610c01565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108b09061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc9061167e565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b8060076000610940610e29565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109ed610e29565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a329190611140565b60405180910390a35050565b610a49848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8a57610a7484848484610ed4565b610a8957610a8863d1a57ed660e01b610c01565b5b5b50505050565b6060610a9b82610ba2565b610ab057610aaf63a14c4b5060e01b610c01565b5b6000610aba611013565b9050600081511415610adb5760405180602001604052806000815250610b06565b80610ae58461102a565b604051602001610af69291906116ec565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610bad610d3a565b11158015610bbc575060005482105b8015610bfa575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b8060005260046000fd5b6000610c16836107f7565b9050818015610c5857508073ffffffffffffffffffffffffffffffffffffffff16610c3f610e29565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c8457610c6e81610c69610e29565b610b0e565b610c8357610c8263cfb3b94260e01b610c01565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d4a610d3a565b11610dec576004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610deb576000811415610de6576000548210610db057610daf63df2d9b4260e01b610c01565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610ddc57610de1565b610dfd565b610db1565b610dfd565b5b610dfc63df2d9b4260e01b610c01565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610e92868684611083565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610efa610e29565b8786866040518563ffffffff1660e01b8152600401610f1c9493929190611765565b602060405180830381600087803b158015610f3657600080fd5b505af1925050508015610f6757506040513d601f19601f82011682018060405250810190610f6491906117c6565b60015b610fc0573d8060008114610f97576040519150601f19603f3d011682016040523d82523d6000602084013e610f9c565b606091505b50600081511415610fb857610fb763d1a57ed660e01b610c01565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561106e57600184039350600a81066030018453600a81049050806110695761106e565b611043565b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110d5816110a0565b81146110e057600080fd5b50565b6000813590506110f2816110cc565b92915050565b60006020828403121561110e5761110d611096565b5b600061111c848285016110e3565b91505092915050565b60008115159050919050565b61113a81611125565b82525050565b60006020820190506111556000830184611131565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119557808201518184015260208101905061117a565b838111156111a4576000848401525b50505050565b6000601f19601f8301169050919050565b60006111c68261115b565b6111d08185611166565b93506111e0818560208601611177565b6111e9816111aa565b840191505092915050565b6000602082019050818103600083015261120e81846111bb565b905092915050565b6000819050919050565b61122981611216565b811461123457600080fd5b50565b60008135905061124681611220565b92915050565b60006020828403121561126257611261611096565b5b600061127084828501611237565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112a482611279565b9050919050565b6112b481611299565b82525050565b60006020820190506112cf60008301846112ab565b92915050565b6112de81611299565b81146112e957600080fd5b50565b6000813590506112fb816112d5565b92915050565b6000806040838503121561131857611317611096565b5b6000611326858286016112ec565b925050602061133785828601611237565b9150509250929050565b61134a81611216565b82525050565b60006020820190506113656000830184611341565b92915050565b60008060006060848603121561138457611383611096565b5b6000611392868287016112ec565b93505060206113a3868287016112ec565b92505060406113b486828701611237565b9150509250925092565b6000602082840312156113d4576113d3611096565b5b60006113e2848285016112ec565b91505092915050565b6113f481611125565b81146113ff57600080fd5b50565b600081359050611411816113eb565b92915050565b6000806040838503121561142e5761142d611096565b5b600061143c858286016112ec565b925050602061144d85828601611402565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611499826111aa565b810181811067ffffffffffffffff821117156114b8576114b7611461565b5b80604052505050565b60006114cb61108c565b90506114d78282611490565b919050565b600067ffffffffffffffff8211156114f7576114f6611461565b5b611500826111aa565b9050602081019050919050565b82818337600083830152505050565b600061152f61152a846114dc565b6114c1565b90508281526020810184848401111561154b5761154a61145c565b5b61155684828561150d565b509392505050565b600082601f83011261157357611572611457565b5b813561158384826020860161151c565b91505092915050565b600080600080608085870312156115a6576115a5611096565b5b60006115b4878288016112ec565b94505060206115c5878288016112ec565b93505060406115d687828801611237565b925050606085013567ffffffffffffffff8111156115f7576115f661109b565b5b6116038782880161155e565b91505092959194509250565b6000806040838503121561162657611625611096565b5b6000611634858286016112ec565b9250506020611645858286016112ec565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061169657607f821691505b602082108114156116aa576116a961164f565b5b50919050565b600081905092915050565b60006116c68261115b565b6116d081856116b0565b93506116e0818560208601611177565b80840191505092915050565b60006116f882856116bb565b915061170482846116bb565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061173782611710565b611741818561171b565b9350611751818560208601611177565b61175a816111aa565b840191505092915050565b600060808201905061177a60008301876112ab565b61178760208301866112ab565b6117946040830185611341565b81810360608301526117a6818461172c565b905095945050505050565b6000815190506117c0816110cc565b92915050565b6000602082840312156117dc576117db611096565b5b60006117ea848285016117b1565b9150509291505056fea26469706673582212201d08f72637ef56a501fdae64bc0acf6a4cbcb1116a8eee6a67dd1d1ac0f02c0f64736f6c63430008090033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  override connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
