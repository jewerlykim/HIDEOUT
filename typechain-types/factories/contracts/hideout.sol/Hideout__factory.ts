/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Hideout,
  HideoutInterface,
} from "../../../contracts/hideout.sol/Hideout";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405180606001604052806036815260200162002bfd60369139600990805190602001906200003592919062000401565b503480156200004357600080fd5b50733cc6cdda760b79bafa08df41ecfa224f810dceb660016040518060400160405280600781526020017f484944454f5554000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f48444f54000000000000000000000000000000000000000000000000000000008152508160029080519060200190620000df92919062000401565b508060039080519060200190620000f892919062000401565b50620001096200032e60201b60201c565b600081905550505062000131620001256200033360201b60201c565b6200033b60201b60201c565b60006daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff163b111562000326578015620001ec576daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff16637d3e3dbe30846040518363ffffffff1660e01b8152600401620001b2929190620004f6565b600060405180830381600087803b158015620001cd57600080fd5b505af1158015620001e2573d6000803e3d6000fd5b5050505062000325565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620002a6576daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663a0af290330846040518363ffffffff1660e01b81526004016200026c929190620004f6565b600060405180830381600087803b1580156200028757600080fd5b505af11580156200029c573d6000803e3d6000fd5b5050505062000324565b6daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff16634420e486306040518263ffffffff1660e01b8152600401620002ef919062000523565b600060405180830381600087803b1580156200030a57600080fd5b505af11580156200031f573d6000803e3d6000fd5b505050505b5b5b5050620005a5565b600090565b600033905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200040f906200056f565b90600052602060002090601f0160209004810192826200043357600085556200047f565b82601f106200044e57805160ff19168380011785556200047f565b828001600101855582156200047f579182015b828111156200047e57825182559160200191906001019062000461565b5b5090506200048e919062000492565b5090565b5b80821115620004ad57600081600090555060010162000493565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004de82620004b1565b9050919050565b620004f081620004d1565b82525050565b60006040820190506200050d6000830185620004e5565b6200051c6020830184620004e5565b9392505050565b60006020820190506200053a6000830184620004e5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058857607f821691505b602082108114156200059f576200059e62000540565b5b50919050565b61264880620005b56000396000f3fe6080604052600436106101145760003560e01c80636352211e116100a0578063a22cb46511610064578063a22cb46514610376578063b88d4fde1461039f578063c87b56dd146103bb578063e985e9c5146103f8578063f2fde38b1461043557610114565b80636352211e1461028f57806370a08231146102cc578063715018a6146103095780638da5cb5b1461032057806395d89b411461034b57610114565b806318160ddd116100e757806318160ddd146101da57806323b872dd1461020557806340c10f191461022157806342842e0e1461024a57806355f804b31461026657610114565b806301ffc9a71461011957806306fdde0314610156578063081812fc14610181578063095ea7b3146101be575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611cc4565b61045e565b60405161014d9190611d0c565b60405180910390f35b34801561016257600080fd5b5061016b6104f0565b6040516101789190611dc0565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190611e18565b610582565b6040516101b59190611e86565b60405180910390f35b6101d860048036038101906101d39190611ecd565b6105e0565b005b3480156101e657600080fd5b506101ef6105f0565b6040516101fc9190611f1c565b60405180910390f35b61021f600480360381019061021a9190611f37565b610607565b005b34801561022d57600080fd5b5061024860048036038101906102439190611ecd565b610808565b005b610264600480360381019061025f9190611f37565b61081e565b005b34801561027257600080fd5b5061028d600480360381019061028891906120bf565b610a1f565b005b34801561029b57600080fd5b506102b660048036038101906102b19190611e18565b610a39565b6040516102c39190611e86565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee9190612108565b610a4b565b6040516103009190611f1c565b60405180910390f35b34801561031557600080fd5b5061031e610ae3565b005b34801561032c57600080fd5b50610335610af7565b6040516103429190611e86565b60405180910390f35b34801561035757600080fd5b50610360610b21565b60405161036d9190611dc0565b60405180910390f35b34801561038257600080fd5b5061039d60048036038101906103989190612161565b610bb3565b005b6103b960048036038101906103b49190612242565b610cbe565b005b3480156103c757600080fd5b506103e260048036038101906103dd9190611e18565b610ec2565b6040516103ef9190611dc0565b60405180910390f35b34801561040457600080fd5b5061041f600480360381019061041a91906122c5565b610f40565b60405161042c9190611d0c565b60405180910390f35b34801561044157600080fd5b5061045c60048036038101906104579190612108565b610fd4565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104b957506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e95750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546104ff90612334565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90612334565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b600061058d82611058565b6105a2576105a163cf4700e460e01b6110b7565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105ec828260016110c1565b5050565b60006105fa6111f0565b6001546000540303905090565b8260006daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff163b11156107f6573373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561067a576106758484846111f5565b610802565b6daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430336040518363ffffffff1660e01b81526004016106c3929190612366565b60206040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071391906123a4565b80156107b457506daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430836040518363ffffffff1660e01b8152600401610763929190612366565b60206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b391906123a4565b5b6107f557336040517fede71dcc0000000000000000000000000000000000000000000000000000000081526004016107ec9190611e86565b60405180910390fd5b5b6108018484846111f5565b5b50505050565b6108106114b9565b61081a8282611537565b5050565b8260006daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff163b1115610a0d573373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108915761088c84848461169d565b610a19565b6daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430336040518363ffffffff1660e01b81526004016108da929190612366565b60206040518083038186803b1580156108f257600080fd5b505afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a91906123a4565b80156109cb57506daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430836040518363ffffffff1660e01b815260040161097a929190612366565b60206040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca91906123a4565b5b610a0c57336040517fede71dcc000000000000000000000000000000000000000000000000000000008152600401610a039190611e86565b60405180910390fd5b5b610a1884848461169d565b5b50505050565b8060099080519060200190610a35929190611bb5565b5050565b6000610a44826116bd565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9257610a91638f4eb60460e01b6110b7565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b610aeb6114b9565b610af56000611780565b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610b3090612334565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5c90612334565b8015610ba95780601f10610b7e57610100808354040283529160200191610ba9565b820191906000526020600020905b815481529060010190602001808311610b8c57829003601f168201915b5050505050905090565b8060076000610bc0611846565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c6d611846565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cb29190611d0c565b60405180910390a35050565b8360006daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff163b1115610eae573373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d3257610d2d8585858561184e565b610ebb565b6daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430336040518363ffffffff1660e01b8152600401610d7b929190612366565b60206040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb91906123a4565b8015610e6c57506daaeb6d7670e522a718067333cd4e73ffffffffffffffffffffffffffffffffffffffff1663c617113430836040518363ffffffff1660e01b8152600401610e1b929190612366565b60206040518083038186803b158015610e3357600080fd5b505afa158015610e47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6b91906123a4565b5b610ead57336040517fede71dcc000000000000000000000000000000000000000000000000000000008152600401610ea49190611e86565b60405180910390fd5b5b610eba8585858561184e565b5b5050505050565b6060610ecd82611058565b610ee257610ee163a14c4b5060e01b6110b7565b5b6000610eec6118a0565b9050600081511415610f0d5760405180602001604052806000815250610f38565b80610f1784611932565b604051602001610f2892919061240d565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610fdc6114b9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561104c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611043906124a3565b60405180910390fd5b61105581611780565b50565b6000816110636111f0565b11158015611072575060005482105b80156110b0575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b8060005260046000fd5b60006110cc83610a39565b905081801561110e57508073ffffffffffffffffffffffffffffffffffffffff166110f5611846565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561113a576111248161111f611846565b610f40565b6111395761113863cfb3b94260e01b6110b7565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b6000611200826116bd565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112755761127463a114810060e01b6110b7565b5b6000806112818461198b565b915091506112978187611292611846565b6119b2565b6112c2576112ac866112a7611846565b610f40565b6112c1576112c06359c896be60e01b6110b7565b5b5b6112cf86868660016119f6565b80156112da57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506113a8856113848888876119fc565b7c020000000000000000000000000000000000000000000000000000000017611a24565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561143057600060018501905060006004600083815260200190815260200160002054141561142e57600054811461142d578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156114a3576114a263ea553b3460e01b6110b7565b5b6114b08787876001611a4f565b50505050505050565b6114c1611a55565b73ffffffffffffffffffffffffffffffffffffffff166114df610af7565b73ffffffffffffffffffffffffffffffffffffffff1614611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c9061250f565b60405180910390fd5b565b60008054905060008214156115575761155663b562e8dd60e01b6110b7565b5b61156460008483856119f6565b6115848361157560008660006119fc565b61157e85611a5d565b17611a24565b6004600083815260200190815260200160002081905550600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff16169050600081141561163d5761163c632e07630060e01b6110b7565b5b6000838301905060008390505b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081141561164a57816000819055505050506116986000848385611a4f565b505050565b6116b883838360405180602001604052806000815250610cbe565b505050565b6000816116c86111f0565b1161176a576004600083815260200190815260200160002054905060007c01000000000000000000000000000000000000000000000000000000008216141561176957600081141561176457600054821061172e5761172d63df2d9b4260e01b6110b7565b5b5b6004600083600190039350838152602001908152602001600020549050600081141561175a5761175f565b61177b565b61172f565b61177b565b5b61177a63df2d9b4260e01b6110b7565b5b919050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b611859848484610607565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461189a5761188484848484611a6d565b6118995761189863d1a57ed660e01b6110b7565b5b5b50505050565b6060600980546118af90612334565b80601f01602080910402602001604051908101604052809291908181526020018280546118db90612334565b80156119285780601f106118fd57610100808354040283529160200191611928565b820191906000526020600020905b81548152906001019060200180831161190b57829003601f168201915b5050505050905090565b606060a060405101806040526020810391506000825281835b60011561197657600184039350600a81066030018453600a810490508061197157611976565b61194b565b50828103602084039350808452505050919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8611a13868684611bac565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b600033905090565b60006001821460e11b9050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a93611846565b8786866040518563ffffffff1660e01b8152600401611ab59493929190612584565b602060405180830381600087803b158015611acf57600080fd5b505af1925050508015611b0057506040513d601f19601f82011682018060405250810190611afd91906125e5565b60015b611b59573d8060008114611b30576040519150601f19603f3d011682016040523d82523d6000602084013e611b35565b606091505b50600081511415611b5157611b5063d1a57ed660e01b6110b7565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60009392505050565b828054611bc190612334565b90600052602060002090601f016020900481019282611be35760008555611c2a565b82601f10611bfc57805160ff1916838001178555611c2a565b82800160010185558215611c2a579182015b82811115611c29578251825591602001919060010190611c0e565b5b509050611c379190611c3b565b5090565b5b80821115611c54576000816000905550600101611c3c565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ca181611c6c565b8114611cac57600080fd5b50565b600081359050611cbe81611c98565b92915050565b600060208284031215611cda57611cd9611c62565b5b6000611ce884828501611caf565b91505092915050565b60008115159050919050565b611d0681611cf1565b82525050565b6000602082019050611d216000830184611cfd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d61578082015181840152602081019050611d46565b83811115611d70576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d9282611d27565b611d9c8185611d32565b9350611dac818560208601611d43565b611db581611d76565b840191505092915050565b60006020820190508181036000830152611dda8184611d87565b905092915050565b6000819050919050565b611df581611de2565b8114611e0057600080fd5b50565b600081359050611e1281611dec565b92915050565b600060208284031215611e2e57611e2d611c62565b5b6000611e3c84828501611e03565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e7082611e45565b9050919050565b611e8081611e65565b82525050565b6000602082019050611e9b6000830184611e77565b92915050565b611eaa81611e65565b8114611eb557600080fd5b50565b600081359050611ec781611ea1565b92915050565b60008060408385031215611ee457611ee3611c62565b5b6000611ef285828601611eb8565b9250506020611f0385828601611e03565b9150509250929050565b611f1681611de2565b82525050565b6000602082019050611f316000830184611f0d565b92915050565b600080600060608486031215611f5057611f4f611c62565b5b6000611f5e86828701611eb8565b9350506020611f6f86828701611eb8565b9250506040611f8086828701611e03565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611fcc82611d76565b810181811067ffffffffffffffff82111715611feb57611fea611f94565b5b80604052505050565b6000611ffe611c58565b905061200a8282611fc3565b919050565b600067ffffffffffffffff82111561202a57612029611f94565b5b61203382611d76565b9050602081019050919050565b82818337600083830152505050565b600061206261205d8461200f565b611ff4565b90508281526020810184848401111561207e5761207d611f8f565b5b612089848285612040565b509392505050565b600082601f8301126120a6576120a5611f8a565b5b81356120b684826020860161204f565b91505092915050565b6000602082840312156120d5576120d4611c62565b5b600082013567ffffffffffffffff8111156120f3576120f2611c67565b5b6120ff84828501612091565b91505092915050565b60006020828403121561211e5761211d611c62565b5b600061212c84828501611eb8565b91505092915050565b61213e81611cf1565b811461214957600080fd5b50565b60008135905061215b81612135565b92915050565b6000806040838503121561217857612177611c62565b5b600061218685828601611eb8565b92505060206121978582860161214c565b9150509250929050565b600067ffffffffffffffff8211156121bc576121bb611f94565b5b6121c582611d76565b9050602081019050919050565b60006121e56121e0846121a1565b611ff4565b90508281526020810184848401111561220157612200611f8f565b5b61220c848285612040565b509392505050565b600082601f83011261222957612228611f8a565b5b81356122398482602086016121d2565b91505092915050565b6000806000806080858703121561225c5761225b611c62565b5b600061226a87828801611eb8565b945050602061227b87828801611eb8565b935050604061228c87828801611e03565b925050606085013567ffffffffffffffff8111156122ad576122ac611c67565b5b6122b987828801612214565b91505092959194509250565b600080604083850312156122dc576122db611c62565b5b60006122ea85828601611eb8565b92505060206122fb85828601611eb8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061234c57607f821691505b602082108114156123605761235f612305565b5b50919050565b600060408201905061237b6000830185611e77565b6123886020830184611e77565b9392505050565b60008151905061239e81612135565b92915050565b6000602082840312156123ba576123b9611c62565b5b60006123c88482850161238f565b91505092915050565b600081905092915050565b60006123e782611d27565b6123f181856123d1565b9350612401818560208601611d43565b80840191505092915050565b600061241982856123dc565b915061242582846123dc565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061248d602683611d32565b915061249882612431565b604082019050919050565b600060208201905081810360008301526124bc81612480565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006124f9602083611d32565b9150612504826124c3565b602082019050919050565b60006020820190508181036000830152612528816124ec565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006125568261252f565b612560818561253a565b9350612570818560208601611d43565b61257981611d76565b840191505092915050565b60006080820190506125996000830187611e77565b6125a66020830186611e77565b6125b36040830185611f0d565b81810360608301526125c5818461254b565b905095945050505050565b6000815190506125df81611c98565b92915050565b6000602082840312156125fb576125fa611c62565b5b6000612609848285016125d0565b9150509291505056fea26469706673582212201b766b28b90512bb9901c7fbcc57cdf478d16fc29d4e83927cbb9f1bf406edab64736f6c63430008090033697066733a2f2f516d6167556541783435506a743639585333734b75544145326b6964765733565047734e314c5837617a4d4553532f";

type HideoutConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HideoutConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hideout__factory extends ContractFactory {
  constructor(...args: HideoutConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Hideout> {
    return super.deploy(overrides || {}) as Promise<Hideout>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hideout {
    return super.attach(address) as Hideout;
  }
  override connect(signer: Signer): Hideout__factory {
    return super.connect(signer) as Hideout__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HideoutInterface {
    return new utils.Interface(_abi) as HideoutInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Hideout {
    return new Contract(address, _abi, signerOrProvider) as Hideout;
  }
}
