/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC165MaliciousData,
  ERC165MaliciousDataInterface,
} from "../../../../../contracts/openzeppelin/mocks/ERC165/ERC165MaliciousData";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610182806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a600480360381019061004591906100e9565b610060565b6040516100579190610131565b60405180910390f35b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005260206000f35b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100c681610091565b81146100d157600080fd5b50565b6000813590506100e3816100bd565b92915050565b6000602082840312156100ff576100fe61008c565b5b600061010d848285016100d4565b91505092915050565b60008115159050919050565b61012b81610116565b82525050565b60006020820190506101466000830184610122565b9291505056fea26469706673582212201b79d15a5c89534b76db1c902b1f98525ebf13b3bad52ab07fee3218657e835564736f6c63430008090033";

type ERC165MaliciousDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC165MaliciousDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC165MaliciousData__factory extends ContractFactory {
  constructor(...args: ERC165MaliciousDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC165MaliciousData> {
    return super.deploy(overrides || {}) as Promise<ERC165MaliciousData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC165MaliciousData {
    return super.attach(address) as ERC165MaliciousData;
  }
  override connect(signer: Signer): ERC165MaliciousData__factory {
    return super.connect(signer) as ERC165MaliciousData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC165MaliciousDataInterface {
    return new utils.Interface(_abi) as ERC165MaliciousDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC165MaliciousData {
    return new Contract(address, _abi, signerOrProvider) as ERC165MaliciousData;
  }
}
