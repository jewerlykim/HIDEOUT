/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DisableOld,
  DisableOldInterface,
} from "../../../../../contracts/openzeppelin/mocks/InitializableMock.sol/DisableOld";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060019054906101000a900460ff161590508080156100425750600160008054906101000a900460ff1660ff16105b80610079575061005b3061015460201b6100091760201c565b1580156100785750600160008054906101000a900460ff1660ff16145b5b6100b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100af906101fa565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156100f5576001600060016101000a81548160ff0219169083151502179055505b801561014e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610145919061026c565b60405180910390a15b50610287565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006101e4602e83610177565b91506101ef82610188565b604082019050919050565b60006020820190508181036000830152610213816101d7565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061025661025161024c8461021a565b610231565b610224565b9050919050565b6102668161023b565b82525050565b6000602082019050610281600083018461025d565b92915050565b6062806102956000396000f3fe6080604052600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff163b11905091905056fea2646970667358221220c2d7817e373ebc5142ed4070692a2449d60421ed70d9693b8dfed2aaa8a0f15864736f6c63430008090033";

type DisableOldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisableOldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisableOld__factory extends ContractFactory {
  constructor(...args: DisableOldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DisableOld> {
    return super.deploy(overrides || {}) as Promise<DisableOld>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DisableOld {
    return super.attach(address) as DisableOld;
  }
  override connect(signer: Signer): DisableOld__factory {
    return super.connect(signer) as DisableOld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisableOldInterface {
    return new utils.Interface(_abi) as DisableOldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisableOld {
    return new Contract(address, _abi, signerOrProvider) as DisableOld;
  }
}
