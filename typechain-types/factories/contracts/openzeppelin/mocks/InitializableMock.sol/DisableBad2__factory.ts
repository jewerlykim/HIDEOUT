/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DisableBad2,
  DisableBad2Interface,
} from "../../../../../contracts/openzeppelin/mocks/InitializableMock.sol/DisableBad2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060019054906101000a900460ff161590508080156100425750600160008054906101000a900460ff1660ff16105b80610079575061005b3061016260201b6100091760201c565b1580156100785750600160008054906101000a900460ff1660ff16145b5b6100b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100af906102c8565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156100f5576001600060016101000a81548160ff0219169083151502179055505b61010361018560201b60201c565b801561015c5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610153919061033a565b60405180910390a15b50610411565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16156101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc906103c7565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff16146102435760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff60405161023a91906103f6565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006102b2602e83610245565b91506102bd82610256565b604082019050919050565b600060208201905081810360008301526102e1816102a5565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061032461031f61031a846102e8565b6102ff565b6102f2565b9050919050565b61033481610309565b82525050565b600060208201905061034f600083018461032b565b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006103b1602783610245565b91506103bc82610355565b604082019050919050565b600060208201905081810360008301526103e0816103a4565b9050919050565b6103f0816102f2565b82525050565b600060208201905061040b60008301846103e7565b92915050565b60628061041f6000396000f3fe6080604052600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff163b11905091905056fea2646970667358221220c9d4690b4f48119e2685a356b912ac5c276c56e37bd7404ab03aeb8b576a14f464736f6c63430008090033";

type DisableBad2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisableBad2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisableBad2__factory extends ContractFactory {
  constructor(...args: DisableBad2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DisableBad2> {
    return super.deploy(overrides || {}) as Promise<DisableBad2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DisableBad2 {
    return super.attach(address) as DisableBad2;
  }
  override connect(signer: Signer): DisableBad2__factory {
    return super.connect(signer) as DisableBad2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisableBad2Interface {
    return new utils.Interface(_abi) as DisableBad2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DisableBad2 {
    return new Contract(address, _abi, signerOrProvider) as DisableBad2;
  }
}
