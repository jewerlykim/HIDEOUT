/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TransparentUpgradeableProxy,
  TransparentUpgradeableProxyInterface,
} from "../../../../../contracts/openzeppelin/proxy/transparent/TransparentUpgradeableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051620018ee380380620018ee833981810160405281019062000029919062000754565b82816200003f828260006200005b60201b60201c565b505062000052826200009e60201b60201c565b50505062000a96565b6200006c83620000fc60201b60201c565b6000825111806200007a5750805b1562000099576200009783836200015360201b6200033b1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000cf6200018960201b60201c565b82604051620000e0929190620007e0565b60405180910390a1620000f981620001ed60201b60201c565b50565b6200010d81620002de60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060620001818383604051806060016040528060278152602001620018c760279139620003b460201b60201c565b905092915050565b6000620001c47fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200044660201b620003681760201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002579062000894565b60405180910390fd5b806200029a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200044660201b620003681760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002f4816200045060201b620003721760201c565b62000336576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032d906200092c565b60405180910390fd5b80620003707f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200044660201b620003681760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051620003e091906200099b565b600060405180830381855af49150503d80600081146200041d576040519150601f19603f3d011682016040523d82523d6000602084013e62000422565b606091505b50915091506200043b868383876200047360201b60201c565b925050509392505050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315620004e457600083511415620004db5762000498856200045060201b60201c565b620004da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004d19062000a04565b60405180910390fd5b5b829050620004f7565b620004f68383620004ff60201b60201c565b5b949350505050565b600082511115620005135781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000549919062000a72565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005938262000566565b9050919050565b620005a58162000586565b8114620005b157600080fd5b50565b600081519050620005c5816200059a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200062082620005d5565b810181811067ffffffffffffffff82111715620006425762000641620005e6565b5b80604052505050565b60006200065762000552565b905062000665828262000615565b919050565b600067ffffffffffffffff821115620006885762000687620005e6565b5b6200069382620005d5565b9050602081019050919050565b60005b83811015620006c0578082015181840152602081019050620006a3565b83811115620006d0576000848401525b50505050565b6000620006ed620006e7846200066a565b6200064b565b9050828152602081018484840111156200070c576200070b620005d0565b5b62000719848285620006a0565b509392505050565b600082601f830112620007395762000738620005cb565b5b81516200074b848260208601620006d6565b91505092915050565b60008060006060848603121562000770576200076f6200055c565b5b60006200078086828701620005b4565b93505060206200079386828701620005b4565b925050604084015167ffffffffffffffff811115620007b757620007b662000561565b5b620007c58682870162000721565b9150509250925092565b620007da8162000586565b82525050565b6000604082019050620007f76000830185620007cf565b620008066020830184620007cf565b9392505050565b600082825260208201905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200087c6026836200080d565b915062000889826200081e565b604082019050919050565b60006020820190508181036000830152620008af816200086d565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600062000914602d836200080d565b91506200092182620008b6565b604082019050919050565b60006020820190508181036000830152620009478162000905565b9050919050565b600081519050919050565b600081905092915050565b600062000971826200094e565b6200097d818562000959565b93506200098f818560208601620006a0565b80840191505092915050565b6000620009a9828462000964565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000620009ec601d836200080d565b9150620009f982620009b4565b602082019050919050565b6000602082019050818103600083015262000a1f81620009dd565b9050919050565b600081519050919050565b600062000a3e8262000a26565b62000a4a81856200080d565b935062000a5c818560208601620006a0565b62000a6781620005d5565b840191505092915050565b6000602082019050818103600083015262000a8e818462000a31565b905092915050565b610e218062000aa66000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100835780635c60da1b1461009f5780638f283970146100bd578063f851a440146100d95761005d565b3661005d5761005b6100f7565b005b6100656100f7565b005b610081600480360381019061007c919061091e565b610111565b005b61009d600480360381019061009891906109b0565b610180565b005b6100a761021e565b6040516100b49190610a1f565b60405180910390f35b6100d760048036038101906100d2919061091e565b61027e565b005b6100e16102db565b6040516100ee9190610a1f565b60405180910390f35b6100ff610395565b61010f61010a610415565b610424565b565b61011961044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610174576101546104a1565b61016f816040518060200160405280600081525060006104b0565b61017d565b61017c6100f7565b5b50565b61018861044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102105761020b8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104b0565b610219565b6102186100f7565b5b505050565b600061022861044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610272576102636104a1565b61026b610415565b905061027b565b61027a6100f7565b5b90565b61028661044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102cf576102c16104a1565b6102ca816104dc565b6102d8565b6102d76100f7565b5b50565b60006102e561044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561032f576103206104a1565b61032861044a565b9050610338565b6103376100f7565b5b90565b60606103608383604051806060016040528060278152602001610dc560279139610528565b905092915050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b61039d61044a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290610ae3565b60405180910390fd5b6104136105ae565b565b600061041f6105b0565b905090565b3660008037600080366000845af43d6000803e8060008114610445573d6000f35b3d6000fd5b60006104787fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b610368565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600034146104ae57600080fd5b565b6104b983610607565b6000825111806104c65750805b156104d7576104d5838361033b565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61050561044a565b82604051610514929190610b03565b60405180910390a161052581610656565b50565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516105529190610ba6565b600060405180830381855af49150503d806000811461058d576040519150601f19603f3d011682016040523d82523d6000602084013e610592565b606091505b50915091506105a386838387610737565b925050509392505050565b565b60006105de7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610368565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610610816107ad565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd90610c2f565b60405180910390fd5b806106f37fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b610368565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060831561079a576000835114156107925761075285610372565b610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610c9b565b60405180910390fd5b5b8290506107a5565b6107a48383610866565b5b949350505050565b6107b681610372565b6107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec90610d2d565b60405180910390fd5b806108227f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610368565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000825111156108795781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad9190610da2565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108eb826108c0565b9050919050565b6108fb816108e0565b811461090657600080fd5b50565b600081359050610918816108f2565b92915050565b600060208284031215610934576109336108b6565b5b600061094284828501610909565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109705761096f61094b565b5b8235905067ffffffffffffffff81111561098d5761098c610950565b5b6020830191508360018202830111156109a9576109a8610955565b5b9250929050565b6000806000604084860312156109c9576109c86108b6565b5b60006109d786828701610909565b935050602084013567ffffffffffffffff8111156109f8576109f76108bb565b5b610a048682870161095a565b92509250509250925092565b610a19816108e0565b82525050565b6000602082019050610a346000830184610a10565b92915050565b600082825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b6000610acd604283610a3a565b9150610ad882610a4b565b606082019050919050565b60006020820190508181036000830152610afc81610ac0565b9050919050565b6000604082019050610b186000830185610a10565b610b256020830184610a10565b9392505050565b600081519050919050565b600081905092915050565b60005b83811015610b60578082015181840152602081019050610b45565b83811115610b6f576000848401525b50505050565b6000610b8082610b2c565b610b8a8185610b37565b9350610b9a818560208601610b42565b80840191505092915050565b6000610bb28284610b75565b915081905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c19602683610a3a565b9150610c2482610bbd565b604082019050919050565b60006020820190508181036000830152610c4881610c0c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610c85601d83610a3a565b9150610c9082610c4f565b602082019050919050565b60006020820190508181036000830152610cb481610c78565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610d17602d83610a3a565b9150610d2282610cbb565b604082019050919050565b60006020820190508181036000830152610d4681610d0a565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610d7482610d4d565b610d7e8185610a3a565b9350610d8e818560208601610b42565b610d9781610d58565b840191505092915050565b60006020820190508181036000830152610dbc8184610d69565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209725bb93dfe5a92e3b61b6cbbc132b23da1a7b6d3530076333793d797831d7f864736f6c63430008090033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type TransparentUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransparentUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransparentUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: TransparentUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TransparentUpgradeableProxy> {
    return super.deploy(
      _logic,
      admin_,
      _data,
      overrides || {}
    ) as Promise<TransparentUpgradeableProxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  override attach(address: string): TransparentUpgradeableProxy {
    return super.attach(address) as TransparentUpgradeableProxy;
  }
  override connect(signer: Signer): TransparentUpgradeableProxy__factory {
    return super.connect(signer) as TransparentUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransparentUpgradeableProxyInterface {
    return new utils.Interface(_abi) as TransparentUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransparentUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransparentUpgradeableProxy;
  }
}
