/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MinimalForwarder,
  MinimalForwarderInterface,
} from "../../../../contracts/openzeppelin/metatx/MinimalForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280601081526020017f4d696e696d616c466f72776172646572000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e310000000000000000000000000000000000000000000000000000008152506200009a6000836200013f60201b620005cd1790919060201c565b60e08181525050620000bc6001826200013f60201b620005cd1790919060201c565b610100818152505081805190602001206101208181525050808051906020012061014081815250504660a08181525050620000fc620001a260201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050620005db565b600060208351101562000165576200015d836200020060201b60201c565b90506200019c565b826200017c836200026d60201b620006171760201c565b60000190805190602001906200019492919062000277565b506000801b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61012051610140514630604051602001620001e5959493929190620003a2565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200025057826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620002479190620004a3565b60405180910390fd5b8051816200025e9062000506565b60001c1760001b915050919050565b6000819050919050565b8280546200028590620005a5565b90600052602060002090601f016020900481019282620002a95760008555620002f5565b82601f10620002c457805160ff1916838001178555620002f5565b82800160010185558215620002f5579182015b82811115620002f4578251825591602001919060010190620002d7565b5b50905062000304919062000308565b5090565b5b808211156200032357600081600090555060010162000309565b5090565b6000819050919050565b6200033c8162000327565b82525050565b6000819050919050565b620003578162000342565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200038a826200035d565b9050919050565b6200039c816200037d565b82525050565b600060a082019050620003b9600083018862000331565b620003c8602083018762000331565b620003d7604083018662000331565b620003e660608301856200034c565b620003f5608083018462000391565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200043b5780820151818401526020810190506200041e565b838111156200044b576000848401525b50505050565b6000601f19601f8301169050919050565b60006200046f82620003ff565b6200047b81856200040a565b93506200048d8185602086016200041b565b620004988162000451565b840191505092915050565b60006020820190508181036000830152620004bf818462000462565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000620004f0825162000327565b80915050919050565b600082821b905092915050565b60006200051382620004c7565b826200051f84620004d2565b90506200052c81620004e2565b925060208210156200056f576200056a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620004f9565b831692505b5050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005be57607f821691505b60208210811415620005d557620005d462000576565b5b50919050565b60805160a05160c05160e0516101005161012051610140516118d7620006366000396000610b0201526000610ae10152600061035c01526000610328015260006108080152600061085e0152600061088701526118d76000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008157806384b0196e146100b2578063bf5d3bdb146100e3575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610d40565b610120565b6040516100789190610d86565b60405180910390f35b61009b60048036038101906100969190610e2a565b610169565b6040516100a9929190610f5a565b60405180910390f35b3480156100be57600080fd5b506100c7610315565b6040516100da9796959493929190611100565b60405180910390f35b3480156100ef57600080fd5b5061010a60048036038101906101059190610e2a565b610417565b6040516101179190611184565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006060610178858585610417565b6101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90611211565b60405180910390fd5b600185608001356101c89190611260565b600260008760000160208101906101df9190610d40565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906102339190610d40565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a0019061026391906112c5565b8b60000160208101906102769190610d40565b604051602001610288939291906113af565b6040516020818303038152906040526040516102a4919061140a565b600060405180830381858888f193505050503d80600081146102e2576040519150601f19603f3d011682016040523d82523d6000602084013e6102e7565b606091505b5091509150603f87606001356102fd9190611450565b5a1161030557fe5b8181935093505050935093915050565b60006060806000806000606061035560007f000000000000000000000000000000000000000000000000000000000000000061062190919063ffffffff16565b61038960017f000000000000000000000000000000000000000000000000000000000000000061062190919063ffffffff16565b46306000801b600067ffffffffffffffff8111156103aa576103a9611481565b5b6040519080825280602002602001820160405280156103d85781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60008061052084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506105127fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906104999190610d40565b8960200160208101906104ac9190610d40565b8a604001358b606001358c608001358d8060a001906104cb91906112c5565b6040516104d99291906114b0565b60405180910390206040516020016104f797969594939291906114c9565b604051602081830303815290604052805190602001206106d7565b6106f190919063ffffffff16565b905084608001356002600087600001602081019061053e9190610d40565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156105c357508460000160208101906105949190610d40565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60006020835110156105e9576105e283610718565b9050610611565b826105f383610617565b6000019080519060200190610609929190610c35565b506000801b90505b92915050565b6000819050919050565b6060600061062e84610780565b11156106445761063d83610790565b90506106d1565b81805461065090611567565b80601f016020809104026020016040519081016040528092919081815260200182805461067c90611567565b80156106c95780601f1061069e576101008083540402835291602001916106c9565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b505050505090505b92915050565b60006106ea6106e4610804565b836108bb565b9050919050565b600080600061070085856108fc565b9150915061070d8161094e565b819250505092915050565b600080829050601f8151111561076557826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040161075c9190611599565b60405180910390fd5b805181610771906115ed565b60001c1760001b915050919050565b600060ff8260001c169050919050565b6060600061079d83610780565b90506000602067ffffffffffffffff8111156107bc576107bb611481565b5b6040519080825280601f01601f1916602001820160405280156107ee5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561088057507f000000000000000000000000000000000000000000000000000000000000000046145b156108ad577f000000000000000000000000000000000000000000000000000000000000000090506108b8565b6108b5610abc565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060418351141561093e5760008060006020860151925060408601519150606086015160001a905061093287828585610b52565b94509450505050610947565b60006002915091505b9250929050565b6000600481111561096257610961611654565b5b81600481111561097557610974611654565b5b141561098057610ab9565b6001600481111561099457610993611654565b5b8160048111156109a7576109a6611654565b5b14156109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df906116cf565b60405180910390fd5b600260048111156109fc576109fb611654565b5b816004811115610a0f57610a0e611654565b5b1415610a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a479061173b565b60405180910390fd5b60036004811115610a6457610a63611654565b5b816004811115610a7757610a76611654565b5b1415610ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaf906117cd565b60405180910390fd5b5b50565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610b379594939291906117ed565b60405160208183030381529060405280519060200120905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610b8d576000600391509150610c2c565b600060018787878760405160008152602001604052604051610bb2949392919061185c565b6020604051602081039080840390855afa158015610bd4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c2357600060019250925050610c2c565b80600092509250505b94509492505050565b828054610c4190611567565b90600052602060002090601f016020900481019282610c635760008555610caa565b82601f10610c7c57805160ff1916838001178555610caa565b82800160010185558215610caa579182015b82811115610ca9578251825591602001919060010190610c8e565b5b509050610cb79190610cbb565b5090565b5b80821115610cd4576000816000905550600101610cbc565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0d82610ce2565b9050919050565b610d1d81610d02565b8114610d2857600080fd5b50565b600081359050610d3a81610d14565b92915050565b600060208284031215610d5657610d55610cd8565b5b6000610d6484828501610d2b565b91505092915050565b6000819050919050565b610d8081610d6d565b82525050565b6000602082019050610d9b6000830184610d77565b92915050565b600080fd5b600060c08284031215610dbc57610dbb610da1565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610dea57610de9610dc5565b5b8235905067ffffffffffffffff811115610e0757610e06610dca565b5b602083019150836001820283011115610e2357610e22610dcf565b5b9250929050565b600080600060408486031215610e4357610e42610cd8565b5b600084013567ffffffffffffffff811115610e6157610e60610cdd565b5b610e6d86828701610da6565b935050602084013567ffffffffffffffff811115610e8e57610e8d610cdd565b5b610e9a86828701610dd4565b92509250509250925092565b60008115159050919050565b610ebb81610ea6565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610efb578082015181840152602081019050610ee0565b83811115610f0a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f2c82610ec1565b610f368185610ecc565b9350610f46818560208601610edd565b610f4f81610f10565b840191505092915050565b6000604082019050610f6f6000830185610eb2565b8181036020830152610f818184610f21565b90509392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610fbf81610f8a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610fec82610fc5565b610ff68185610fd0565b9350611006818560208601610edd565b61100f81610f10565b840191505092915050565b61102381610d02565b82525050565b6000819050919050565b61103c81611029565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61107781610d6d565b82525050565b6000611089838361106e565b60208301905092915050565b6000602082019050919050565b60006110ad82611042565b6110b7818561104d565b93506110c28361105e565b8060005b838110156110f35781516110da888261107d565b97506110e583611095565b9250506001810190506110c6565b5085935050505092915050565b600060e082019050611115600083018a610fb6565b81810360208301526111278189610fe1565b9050818103604083015261113b8188610fe1565b905061114a6060830187610d77565b611157608083018661101a565b61116460a0830185611033565b81810360c083015261117681846110a2565b905098975050505050505050565b60006020820190506111996000830184610eb2565b92915050565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b60006111fb603283610fd0565b91506112068261119f565b604082019050919050565b6000602082019050818103600083015261122a816111ee565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126b82610d6d565b915061127683610d6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112ab576112aa611231565b5b828201905092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126112e2576112e16112b6565b5b80840192508235915067ffffffffffffffff821115611304576113036112bb565b5b6020830192506001820236038313156113205761131f6112c0565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061134e8385611328565b935061135b838584611333565b82840190509392505050565b60008160601b9050919050565b600061137f82611367565b9050919050565b600061139182611374565b9050919050565b6113a96113a482610d02565b611386565b82525050565b60006113bc828587611342565b91506113c88284611398565b601482019150819050949350505050565b60006113e482610ec1565b6113ee8185611328565b93506113fe818560208601610edd565b80840191505092915050565b600061141682846113d9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061145b82610d6d565b915061146683610d6d565b92508261147657611475611421565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006114bd828486611342565b91508190509392505050565b600060e0820190506114de600083018a611033565b6114eb602083018961101a565b6114f8604083018861101a565b6115056060830187610d77565b6115126080830186610d77565b61151f60a0830185610d77565b61152c60c0830184611033565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061157f57607f821691505b6020821081141561159357611592611538565b5b50919050565b600060208201905081810360008301526115b38184610fe1565b905092915050565b6000819050602082019050919050565b60006115d78251611029565b80915050919050565b600082821b905092915050565b60006115f882610ec1565b82611602846115bb565b905061160d816115cb565b9250602082101561164d576116487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026115e0565b831692505b5050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006116b9601883610fd0565b91506116c482611683565b602082019050919050565b600060208201905081810360008301526116e8816116ac565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611725601f83610fd0565b9150611730826116ef565b602082019050919050565b6000602082019050818103600083015261175481611718565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006117b7602283610fd0565b91506117c28261175b565b604082019050919050565b600060208201905081810360008301526117e6816117aa565b9050919050565b600060a0820190506118026000830188611033565b61180f6020830187611033565b61181c6040830186611033565b6118296060830185610d77565b611836608083018461101a565b9695505050505050565b600060ff82169050919050565b61185681611840565b82525050565b60006080820190506118716000830187611033565b61187e602083018661184d565b61188b6040830185611033565b6118986060830184611033565b9594505050505056fea26469706673582212201b348f99d3cd738076cb2452ce62a02ad14ee37160c047e5d3ee793f8a19a56564736f6c63430008090033";

type MinimalForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalForwarder__factory extends ContractFactory {
  constructor(...args: MinimalForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MinimalForwarder> {
    return super.deploy(overrides || {}) as Promise<MinimalForwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MinimalForwarder {
    return super.attach(address) as MinimalForwarder;
  }
  override connect(signer: Signer): MinimalForwarder__factory {
    return super.connect(signer) as MinimalForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderInterface {
    return new utils.Interface(_abi) as MinimalForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarder {
    return new Contract(address, _abi, signerOrProvider) as MinimalForwarder;
  }
}
